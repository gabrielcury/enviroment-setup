version: '3.8'

services:
  traefik:
    image: traefik:v2.9
    container_name: traefik
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=seu-email@teste.dev.br"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--tracing.jaeger=true"
      - "--tracing.jaeger.samplingServerURL=http://jaeger:5778/sampling"
      - "--tracing.jaeger.localAgentHostPort=jaeger:6831"
      - "--metrics.prometheus=true"
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/traefik/access.log"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik-logs:/var/log/traefik
      - ./letsencrypt:/letsencrypt
    networks:
      - app_network

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: unless-stopped
    networks:
      - app_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    networks:
      - app_network
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - app_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.teste.dev.br`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./app:/var/www/html
    depends_on:
      - php
    networks:
      - app_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`nginx.teste.dev.br`)"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls.certresolver=myresolver"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"

  php:
    image: php:8.2-fpm
    container_name: php
    restart: unless-stopped
    volumes:
      - ./app:/var/www/html
    networks:
      - app_network

  mysql:
    image: mysql:latest
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: app_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mysql.rule=Host(`mysql.teste.dev.br`)"
      - "traefik.http.routers.mysql.entrypoints=websecure"
      - "traefik.http.routers.mysql.tls.certresolver=myresolver"
      - "traefik.http.services.mysql.loadbalancer.server.port=3306"

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: root
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.teste.dev.br`)"
      - "traefik.http.routers.phpmyadmin.entrypoints=websecure"
      - "traefik.http.routers.phpmyadmin.tls.certresolver=myresolver"
      - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"
    networks:
      - app_network

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    networks:
      - app_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redis.rule=Host(`redis.teste.dev.br`)"
      - "traefik.http.routers.redis.entrypoints=websecure"
      - "traefik.http.routers.redis.tls.certresolver=myresolver"
      - "traefik.http.services.redis.loadbalancer.server.port=6379"

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db
    networks:
      - app_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mongodb.rule=Host(`mongodb.teste.dev.br`)"
      - "traefik.http.routers.mongodb.entrypoints=websecure"
      - "traefik.http.routers.mongodb.tls.certresolver=myresolver"
      - "traefik.http.services.mongodb.loadbalancer.server.port=27017"

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`adminer.teste.dev.br`)"
      - "traefik.http.routers.adminer.entrypoints=websecure"
      - "traefik.http.routers.adminer.tls.certresolver=myresolver"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
    networks:
      - app_network

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    restart: unless-stopped
    volumes:
      - jenkins_home:/var/jenkins_home
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jenkins.rule=Host(`jenkins.teste.dev.br`)"
      - "traefik.http.routers.jenkins.entrypoints=websecure"
      - "traefik.http.routers.jenkins.tls.certresolver=myresolver"
      - "traefik.http.services.jenkins.loadbalancer.server.port=8080"
    networks:
      - app_network

  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    restart: unless-stopped
    environment:
      - USER_UID=1000
      - USER_GID=1000
    volumes:
      - gitea_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitea.rule=Host(`gitea.teste.dev.br`)"
      - "traefik.http.routers.gitea.entrypoints=websecure"
      - "traefik.http.routers.gitea.tls.certresolver=myresolver"
      - "traefik.http.services.gitea.loadbalancer.server.port=3000"
    networks:
      - app_network
  
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.teste.dev.br`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=myresolver"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
  mongo_data:
  jenkins_home:
  gitea_data:
  portainer_data:
  grafana_data:
  netdata_data:
